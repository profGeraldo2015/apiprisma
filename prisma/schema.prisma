// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usser {
  id Int @id @default(autoincrement())

  email    String @unique
  password String

  name String
}

model Categorias {
  id        Int      @id @default(autoincrement())
  nome      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  produtos Produtos[]

}

model Produtos {

  id Int @id @default(autoincrement())

  nome      String
  descricao String
  preco     Decimal

  categoria   Categorias @relation(fields: [categoriaId], references: [id])
  categoriaId Int

  ingrediente Ingredientes[]
  comandas    Comandas[]
  cardapio    Cardapio?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

}

model Ingredientes {

  id        Int      @id @default(autoincrement())
  nome      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  produtos Produtos[]

}

model Mesas {
  id            Int             @id @default(autoincrement())
  descricao     String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  status        Status          @default(value: VAZIA)
  mesascomandas MesasComandas[]
}

enum Status {
  VAZIA
  OCUPADA
}

model Garcom {
  id   Int    @id @default(autoincrement())
  nome String @unique

  comandas Comandas[]
}

model Comandas {
  id Int @id @default(autoincrement())

  mesascomandas MesasComandas[]

  garcom     Garcom   @relation(fields: [garcomId], references: [id])
  garcomId   Int
  produtos   Produtos @relation(fields: [produtoId], references: [id])
  produtoId  Int      @unique
  quantidade Int
  valor      Decimal
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  entrada    DateTime
  producao   DateTime
  saida      DateTime
  statusC    StatusC  @default(value: AGUARDANDO)

}

enum StatusC {
  AGUARDANDO
  PRODUZINDO
  ENTREGUE
}

model MesasComandas {

  id         Int      @id @default(autoincrement())
  mesasId    Int
  mesa       Mesas    @relation(fields: [mesasId], references: [id])
  comandasId Int
  comandas   Comandas @relation(fields: [comandasId], references: [id])

}

model Cardapio {

  id        Int      @id @default(autoincrement())
  nome      String   @unique
  descricao String?
  preco     Decimal

  produtos  Produtos @relation(fields: [produtoId], references: [id])
  produtoId Int      @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

}
